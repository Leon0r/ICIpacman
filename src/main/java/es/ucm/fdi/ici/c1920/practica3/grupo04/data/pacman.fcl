FUNCTION_BLOCK FuzzyMsPacMan	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	BLINKYdistance : REAL;
	BLINKYconfidence : REAL;
	PINKYdistance : REAL;
	PINKYconfidence : REAL;
	INKYdistance : REAL;
	INKYconfidence : REAL;
	SUEdistance : REAL;
	SUEconfidence : REAL;
	
	NearestPowerPill : REAL;
	SavePath : REAL;
	EdibleTime : REAL;
	SafePowerPill : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	eatPills : REAL;
	eatGhosts : REAL;
	goToPowerPill : REAL;
END_VAR

// GHOST DISTANCES
FUZZIFY BLINKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY BLINKYconfidence			
	TERM near := (0, 1) (40, 0) ; 
	TERM medium := (0,0) (16, 1) (60, 0);
	TERM far := (0,0) (150, 1);
END_FUZZIFY

FUZZIFY PINKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0); 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PINKYconfidence			
	TERM near := (0, 1) (40, 0) ; 
	TERM medium := (0,0) (16, 1) (60, 0);
	TERM far := (0,0) (150, 1);
END_FUZZIFY

FUZZIFY INKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY INKYconfidence			
	TERM near := (0, 1) (40, 0) ; 
	TERM medium := (0,0) (16, 1) (60, 0);
	TERM far := (0,0) (150, 1);
END_FUZZIFY

FUZZIFY SUEdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY SUEconfidence			
	TERM near := (0, 1) (40, 0) ; 
	TERM medium := (0,0) (16, 1) (60, 0);
	TERM far := (0,0) (150, 1);
END_FUZZIFY

/*// PILLS DISTANCES
FUZZIFY PILL0distance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PILL1distance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PILL2distance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PILL3distance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY*/
FUZZIFY NearestPowerPill			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY SavePath			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM yes := 1;
	TERM no := 0;
END_FUZZIFY
FUZZIFY EdibleTime
	TERM soon := (5, 1) (10, 0) ; 
	TERM normal := gauss 15 5;
	TERM late := (15, 0) (25, 1) (300, 1);
END_FUZZIFY
FUZZIFY SafePowerPill			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM yes := 1;
	TERM no := 0;
END_FUZZIFY

// METODOS 
DEFUZZIFY runAway			// Defuzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervous := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY eatGhosts			// Defuzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervous := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY goToPowerPill			// Defuzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervous := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK MsPacManRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	OR : MAX;
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)


	//Maybe no need to use distance of power pills? Maybe no need to differentiate between runaway and goToPowerPill?
	//TO DO: add edible states
	
	
	
	/*
	if four ghosts
		if save path
			if power pill in save path -> eat power pill
			if power pill not in save path -> eat pills (in save path)
		if no save path
			if ghost closer than power pill -> eat pills
			if ghost farther than power pill -> eat power pill
			if ghost as close as power pill -> eat power pill
	if three ghosts
		if save path
			if power pill in save path -> eat power pill
			if power pill not in save path -> eat pills (in save path)
		if no save path
			if ghost closer than power pill -> eat pills
			if ghost farther than power pill -> eat power pill
			if ghost as close as power pill -> eat power pill
	if two ghosts
		if save path -> eat pills
		if no save path
			if ghost closer than power pill -> eat pills
			if ghost farther than power pill -> eat power pill
			if ghost as close as power pill -> eat power pill
	If one ghost-> eat pills
	If no ghosts -> eat pills
	*/
	
	
	

	//If all ghosts are following
	RULE 1 : IF SavePath IS yes AND SafePowerPill IS yes AND BLINKYdistance IS near AND PINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near THEN runAway IS emergency, goToPowerPill IS emergency;
	RULE 2 : IF SavePath IS no AND BLINKYdistance IS near AND PINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near THEN goToPowerPill IS emergency;
	
	//If three ghosts are following
	RULE 3 : IF SavePath IS yes AND BLINKYdistance IS near AND PINKYdistance IS near AND INKYdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN runAway IS emergency, goToPowerPill IS nervous;
	RULE 4 : IF SavePath IS yes AND BLINKYdistance IS near AND PINKYdistance IS near AND SUEdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN runAway IS emergency, goToPowerPill IS nervous;
	RULE 5 : IF SavePath IS yes AND BLINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN runAway IS emergency, goToPowerPill IS nervous;
	RULE 6 : IF SavePath IS yes AND PINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN runAway IS emergency, goToPowerPill IS nervous;
		//TO DO: don't know how to act
	RULE 7 : IF SavePath IS yes AND BLINKYdistance IS near AND PINKYdistance IS near AND INKYdistance IS near THEN runAway IS emergency, goToPowerPill IS nervous;
	RULE 8 : IF SavePath IS yes AND BLINKYdistance IS near AND PINKYdistance IS near AND SUEdistance IS near THEN runAway IS emergency, goToPowerPill IS nervous;
	RULE 9 : IF SavePath IS yes AND BLINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near THEN runAway IS emergency, goToPowerPill IS nervous;
	RULE 10 : IF SavePath IS yes AND PINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near THEN runAway IS emergency, goToPowerPill IS nervous;
	
	RULE 11 : IF SavePath IS no AND BLINKYdistance IS near AND PINKYdistance IS near AND INKYdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN goToPowerPill IS emergency;
	RULE 12 : IF SavePath IS no AND BLINKYdistance IS near AND PINKYdistance IS near AND SUEdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN goToPowerPill IS emergency;
	RULE 13 : IF SavePath IS no AND BLINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN goToPowerPill IS emergency;
	RULE 14 : IF SavePath IS no AND PINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN goToPowerPill IS emergency;
		//TO DO: don't know how to act
	RULE 15 : IF SavePath IS no AND BLINKYdistance IS near AND PINKYdistance IS near AND INKYdistance IS near THEN runAway IS emergency, goToPowerPill IS nervous;
	RULE 16 : IF SavePath IS no AND BLINKYdistance IS near AND PINKYdistance IS near AND SUEdistance IS near THEN runAway IS emergency, goToPowerPill IS nervous;
	RULE 17 : IF SavePath IS no AND BLINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near THEN runAway IS emergency, goToPowerPill IS nervous;
	RULE 18 : IF SavePath IS no AND PINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near THEN runAway IS emergency, goToPowerPill IS nervous;
	
	//If two ghosts are following
	RULE 19 : IF SavePath IS yes AND BLINKYdistance IS near AND PINKYdistance IS near THEN runAway IS nervous, goToPowerPill IS calm;
	RULE 20 : IF SavePath IS yes AND BLINKYdistance IS near AND INKYdistance IS near THEN runAway IS nervous, goToPowerPill IS calm;
	RULE 21 : IF SavePath IS yes AND BLINKYdistance IS near AND SUEdistance IS near THEN runAway IS nervous, goToPowerPill IS calm;
	RULE 22 : IF SavePath IS yes AND PINKYdistance IS near AND INKYdistance IS near THEN runAway IS nervous, goToPowerPill IS calm;
	RULE 23 : IF SavePath IS yes AND PINKYdistance IS near AND SUEdistance IS near THEN runAway IS nervous, goToPowerPill IS calm;
	RULE 24 : IF SavePath IS yes AND INKYdistance IS near AND SUEdistance IS near THEN runAway IS nervous, goToPowerPill IS calm;
	
	RULE 25 : IF SavePath IS no AND BLINKYdistance IS near AND PINKYdistance IS near THEN goToPowerPill IS emergency;
	RULE 26 : IF SavePath IS no AND BLINKYdistance IS near AND INKYdistance IS near THEN goToPowerPill IS emergency;
	RULE 27 : IF SavePath IS no AND BLINKYdistance IS near AND SUEdistance IS near THEN goToPowerPill IS emergency;
	RULE 28 : IF SavePath IS no AND PINKYdistance IS near AND INKYdistance IS near THEN goToPowerPill IS emergency;
	RULE 29 : IF SavePath IS no AND PINKYdistance IS near AND SUEdistance IS near THEN goToPowerPill IS emergency;
	RULE 30 : IF SavePath IS no AND INKYdistance IS near AND SUEdistance IS near THEN goToPowerPill IS emergency;
	
	//If one ghost is following
	RULE 31 : IF BLINKYdistance IS near THEN runAway IS calm, goToPowerPill IS calm;
	RULE 32 : IF PINKYdistance IS near THEN runAway IS calm, goToPowerPill IS calm;
	RULE 33 : IF INKYdistance IS near THEN runAway IS calm, goToPowerPill IS calm;
	RULE 34 : IF SUEdistance IS near THEN runAway IS calm, goToPowerPill IS calm;
	
	//If ghosts are not near
	RULE 35 : IF BLINKYdistance IS medium THEN runAway IS nervous, goToPowerPill IS calm;
	RULE 36 : IF PINKYdistance IS medium THEN runAway IS nervous, goToPowerPill IS calm;
	RULE 37 : IF INKYdistance IS medium THEN runAway IS nervous, goToPowerPill IS calm;
	RULE 38 : IF SUEdistance IS medium THEN runAway IS nervous, goToPowerPill IS calm;
	RULE 39 : IF BLINKYdistance IS far THEN runAway IS calm, goToPowerPill IS calm;
	RULE 40 : IF PINKYdistance IS far THEN runAway IS calm, goToPowerPill IS calm;
	RULE 41 : IF INKYdistance IS far THEN runAway IS calm, goToPowerPill IS calm;
	RULE 42 : IF SUEdistance IS far THEN runAway IS calm, goToPowerPill IS calm;
END_RULEBLOCK

END_FUNCTION_BLOCK
FUNCTION_BLOCK FuzzyMsPacMan	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	BLINKYdistance : REAL;
	PINKYdistance : REAL;
	INKYdistance : REAL;
	SUEdistance : REAL;
	PILL0distance : REAL;
	PILL1distance : REAL;
	PILL2distance : REAL;
	PILL3distance : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	runAway : REAL;
	goToPowerPill : REAL;
END_VAR

// GHOST DISTANCES
FUZZIFY BLINKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PINKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0); 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY INKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY SUEdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

// PILLS DISTANCES
FUZZIFY PILL0distance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PILL1distance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PILL2distance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PILL3distance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

// METODOS 
DEFUZZIFY runAway			// Defuzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY goToPowerPill			// Defuzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK MsPacManRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	OR : MAX;
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)

	//If all ghosts are following
	RULE 1 : IF BLINKYdistance IS near AND PINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN runAway IS emergency, goToPowerPill IS emergency;
	
	//If three ghosts are following
	RULE 2 : IF BLINKYdistance IS near AND PINKYdistance IS near AND INKYdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN runAway IS emergency, goToPowerPill IS nervious;
	RULE 3 : IF BLINKYdistance IS near AND PINKYdistance IS near AND SUEdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN runAway IS emergency, goToPowerPill IS nervious;
	RULE 4 : IF BLINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN runAway IS emergency, goToPowerPill IS nervious;
	RULE 5 : IF PINKYdistance IS near AND INKYdistance IS near AND SUEdistance IS near AND (PILL0distance IS near OR PILL1distance IS near OR PILL2distance IS near OR PILL3distance IS near) THEN runAway IS emergency, goToPowerPill IS nervious;
	
	//If two ghosts are following
	RULE 6 : IF BLINKYdistance IS near AND PINKYdistance IS near THEN runAway IS nervious, goToPowerPill IS calm;
	RULE 7 : IF BLINKYdistance IS near AND INKYdistance IS near THEN runAway IS nervious, goToPowerPill IS calm;
	RULE 8 : IF BLINKYdistance IS near AND SUEdistance IS near THEN runAway IS nervious, goToPowerPill IS calm;
	RULE 9 : IF PINKYdistance IS near AND INKYdistance IS near THEN runAway IS nervious, goToPowerPill IS calm;
	RULE 10 : IF PINKYdistance IS near AND SUEdistance IS near THEN runAway IS nervious, goToPowerPill IS calm;
	RULE 11 : IF INKYdistance IS near AND SUEdistance IS near THEN runAway IS nervious, goToPowerPill IS calm;
	
	//If one ghost is following
	RULE 12 : IF BLINKYdistance IS near THEN runAway IS calm, goToPowerPill IS calm;
	RULE 13 : IF PINKYdistance IS near THEN runAway IS calm, goToPowerPill IS calm;
	RULE 14 : IF INKYdistance IS near THEN runAway IS calm, goToPowerPill IS calm;
	RULE 15 : IF SUEdistance IS near THEN runAway IS calm, goToPowerPill IS calm;
	
	RULE 16 : IF BLINKYdistance IS medium THEN runAway IS nervious;
	RULE 17 : IF PINKYdistance IS medium THEN runAway IS nervious;
	RULE 18 : IF INKYdistance IS medium THEN runAway IS nervious;
	RULE 19 : IF SUEdistance IS medium THEN runAway IS nervious;
	RULE 20 : IF BLINKYdistance IS far THEN runAway IS calm;
	RULE 21 : IF PINKYdistance IS far THEN runAway IS calm;
	RULE 22 : IF INKYdistance IS far THEN runAway IS calm;
	RULE 23 : IF SUEdistance IS far THEN runAway IS calm;
END_RULEBLOCK

END_FUNCTION_BLOCK